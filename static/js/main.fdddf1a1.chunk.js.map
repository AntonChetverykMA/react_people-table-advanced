{"version":3,"sources":["Context/Context.tsx","components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/api.js","api/index.js","components/PeopleTable/PersonName.tsx","components/PeopleTable/PersonRow.tsx","components/PeopleTable/TableHeader.tsx","components/Filter/Filter.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["AppContext","React","createContext","people","setPeople","AppProvider","children","useState","AppProps","Provider","value","Header","className","to","exact","activeClassName","Homepage","NotFoundPage","BASE_URL","getPeople","url","options","fetch","then","res","ok","Error","status","json","request","PersonName","personName","person","name","paramsName","search","useLocation","useContext","lowerName","toLowerCase","isPersonInList","some","item","split","join","born","cn","blue","sex","red","bold","PersonRow","params","useParams","arrFromName","slice","length","parsParamsName","row","died","mother","father","TableHeader","sortBy","title","searchParams","order","setOrder","history","useHistory","sortByOrder","get","lowerTitle","toLocaleLowerCase","data-name","onClick","e","selector","currentTarget","attributes","getNamedItem","set","push","toString","icon","faSort","faSortUp","faSortDown","Filter","query","type","placeholder","onChange","target","delete","memo","location","URLSearchParams","selectors","filtredPeople","useMemo","filter","includes","fatherName","motherName","sort","personA","personB","localeCompare","getfiltredPeople","map","key","PeoplePage","useEffect","peopleWithParents","App","path","component","HomePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fdddf1a1.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { IPerson } from '../Interfaces/Interfaces';\n\nexport const AppContext = React.createContext<{\n  people: IPerson[];\n  setPeople: React.Dispatch<React.SetStateAction<IPerson[]>>;\n}>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<IPerson[]>([]);\n\n  const AppProps = {\n    people,\n    setPeople,\n  };\n\n  return <AppContext.Provider value={AppProps}>{children}</AppContext.Provider>;\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <nav className=\"nav\">\n      <NavLink to=\"/\" exact className=\"nav-item\" activeClassName=\"active\">\n        Home\n      </NavLink>\n      <NavLink to=\"/people\" className=\"nav-item\" activeClassName=\"active\">\n        People\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Homepage = () => {\n  return <div className=\"homepage\">Homepage</div>;\n};\n\nexport default Homepage;\n","import React from 'react';\n\nconst NotFoundPage = () => <div className=\"notFoundPage\">Page not found</div>;\n\nexport default NotFoundPage;\n","export const BASE_URL =\n  'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const request = (url = '', options) => {\n  return fetch(`${BASE_URL}${url}`, options).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};\n","import { request } from './api';\n\nexport const getPeople = () => {\n  return request();\n};\n","import React, { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport { AppContext } from '../../Context/Context';\n\nconst PersonName: React.FC<{\n  person: IPerson;\n  name: string;\n  paramsName: string;\n}> = ({ person, name, paramsName }) => {\n  const { search } = useLocation();\n  const { people } = useContext(AppContext);\n  const createQueryStr = (personName: string) => {\n    if (personName) {\n      const queryStr =\n        personName.toLowerCase().split(' ').join('-') + `-${person.born}`;\n\n      return queryStr;\n    }\n\n    return '';\n  };\n\n  const lowerName = person.name.toLowerCase();\n  const isPersonInList = people.some((item) => name === item.name);\n\n  return (\n    <Link\n      to={`/people/${createQueryStr(name)}${search}`}\n      className={cn(\n        'name-link',\n        {\n          blue: paramsName === lowerName && person.sex === 'm',\n        },\n        {\n          red: paramsName === lowerName && person.sex === 'f',\n        },\n        {\n          bold: name && paramsName === name.toLowerCase() && !isPersonInList,\n        }\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import React from 'react';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport PersonName from './PersonName';\n\nconst PersonRow: React.FC<{ person: IPerson }> = ({ person }) => {\n  const params: { person: string } = useParams();\n\n  const parsParamsName = () => {\n    if (params.person) {\n      const arrFromName = params.person.split('-');\n      const paramsName = arrFromName.slice(0, arrFromName.length - 1).join(' ');\n\n      return paramsName;\n    }\n\n    return '';\n  };\n\n  const paramsName = parsParamsName();\n\n  return (\n    <tr className={cn({ row: paramsName === person.name.toLowerCase() })}>\n      <td className=\"person-name\">\n        <PersonName\n          person={person}\n          name={person.name}\n          paramsName={paramsName}\n        />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.mother}\n          paramsName={paramsName}\n        />\n      </td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.father}\n          paramsName={paramsName}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { useHistory } from 'react-router-dom';\n\nconst TableHeader: React.FC<{\n  sortBy: string | null;\n  title: string;\n  searchParams: URLSearchParams;\n}> = ({ sortBy, title, searchParams }) => {\n  const [order, setOrder] = useState('asc');\n  const history = useHistory();\n  const sortByOrder = searchParams.get('sortByOrder');\n\n  const onClick = (e: React.MouseEvent<HTMLTableDataCellElement>): void => {\n    const selector = e.currentTarget.attributes.getNamedItem('data-name')\n      ?.value;\n\n    if (selector) {\n      searchParams.set('sortBy', selector);\n      searchParams.set('sortByOrder', order);\n      setOrder(order === 'asc' ? 'desc' : 'asc');\n      history.push(`?${searchParams.toString()}`);\n    }\n  };\n\n  const lowerTitle = title.toLocaleLowerCase();\n\n  return (\n    <td data-name={title.toLowerCase()} onClick={onClick}>\n      <FontAwesomeIcon icon={faSort} />\n      <span className=\"title\">\n        {title} {sortBy === title.toLowerCase() && '*'}\n      </span>\n      {sortByOrder === 'asc' && sortBy === lowerTitle && (\n        <FontAwesomeIcon icon={faSortUp} />\n      )}\n      {sortByOrder === 'desc' && sortBy === lowerTitle && (\n        <FontAwesomeIcon icon={faSortDown} />\n      )}\n    </td>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\n\nconst Filter: React.FC<{ searchParams: URLSearchParams }> = ({\n  searchParams,\n}) => {\n  const query = searchParams.get('query') || '';\n  const history = useHistory();\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    if (e.target.value) {\n      searchParams.set('query', e.target.value);\n    } else {\n      searchParams.delete('query');\n    }\n\n    history.push(`?${searchParams.toString()}`);\n  };\n\n  return (\n    <form className=\"form\">\n      <input\n        value={query ? query : ''}\n        type=\"text\"\n        placeholder=\"filter\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import React, { useMemo } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PersonRow from './PersonRow';\nimport TableHeader from './TableHeader';\nimport Filter from '../Filter/Filter';\n\nconst PeopleTable: React.FC<{\n  people: IPerson[];\n}> = ({ people }) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortBy = searchParams.get('sortBy');\n  const sortByOrder = searchParams.get('sortByOrder');\n  const selectors = ['name', 'sex', 'born', 'died'];\n  const tableHeaders = ['Name', 'Sex', 'Born', 'Died'];\n  //Filter\n  const query = searchParams.get('query') || '';\n\n  let getfiltredPeople = () => {\n    let filtredPeople = query\n      ? people.filter(\n          (person) =>\n            person.name.toLowerCase().includes(query) ||\n            (person.fatherName &&\n              person.fatherName.toLowerCase().includes(query)) ||\n            (person.motherName &&\n              person.motherName.toLowerCase().includes(query))\n        )\n      : people;\n\n    if (sortBy && selectors.some((item) => item === sortBy)) {\n      filtredPeople = filtredPeople.sort((personA, personB): number => {\n        if (sortBy === 'name' || sortBy === 'sex') {\n          return sortByOrder === 'asc' || !sortByOrder\n            ? personA[sortBy].localeCompare(personB[sortBy])\n            : personB[sortBy].localeCompare(personA[sortBy]);\n        }\n\n        if (sortBy === 'born' || sortBy === 'died') {\n          return sortByOrder === 'asc' || !sortByOrder\n            ? personA[sortBy] - personB[sortBy]\n            : personB[sortBy] - personA[sortBy];\n        }\n\n        return 0;\n      });\n    }\n\n    return filtredPeople;\n  };\n\n  const filtredPeople = useMemo(() => getfiltredPeople(), [\n    query,\n    sortByOrder,\n    sortBy,\n    people,\n  ]);\n\n  return (\n    <div>\n      <Filter searchParams={searchParams} />\n      <table className=\"peopleTable\">\n        <thead>\n          <tr>\n            {tableHeaders.map((item) => (\n              <TableHeader\n                sortBy={sortBy}\n                title={item}\n                searchParams={searchParams}\n                key={item}\n              />\n            ))}\n            <td>Mother</td>\n            <td>Father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {filtredPeople.map((person) => (\n            <PersonRow person={person} key={person.name} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default React.memo(PeopleTable);\n","import React, { useEffect, useContext } from 'react';\nimport { getPeople } from '../../api';\nimport { AppContext } from '../../Context/Context';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PeopleTable from '../PeopleTable/PeopleTable';\n\nconst PeoplePage = () => {\n  const { people, setPeople } = useContext(AppContext);\n\n  useEffect(() => {\n    getPeople().then((people) => {\n      const peopleWithParents = people.map((person: IPerson) => {\n        person.mother = person.motherName;\n        person.father = person.fatherName;\n        return person;\n      });\n      setPeople(peopleWithParents);\n    });\n  }, [setPeople]);\n\n  return (\n    <div className=\"peoplePage\">\n      <PeopleTable people={people} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport HomePage from './components/HomePage/HomePage';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1>People table</h1>\n\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/people/:person?\" component={PeoplePage} />\n        <Redirect path=\"/home\" to=\"/\" />\n        <Redirect path=\"/react_people-table-basics\" to=\"/\" />\n        <NotFoundPage />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { AppProvider } from './Context/Context';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}