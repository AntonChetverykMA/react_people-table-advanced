{"version":3,"sources":["Context/Context.tsx","components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/index.js","api/api.js","components/PeopleTable/PersonName.tsx","components/PeopleTable/PersonRow.tsx","components/PeopleTable/TableHeader.tsx","components/PeopleTable/PeopleTable.tsx","components/Filter/Filter.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["AppContext","React","createContext","people","setPeople","AppProvider","children","useState","AppProps","Provider","value","Header","className","to","exact","activeClassName","Homepage","NotFoundPage","getPeople","url","fetch","options","then","res","ok","Error","status","json","PersonName","personName","person","name","paramsName","search","useLocation","useContext","lowerName","toLowerCase","isPersonInList","some","item","split","join","born","cn","blue","sex","red","bold","PersonRow","params","useParams","arrFromName","slice","length","parsParamsName","row","died","mother","father","TableHeader","sortBy","title","order","setOrder","history","useHistory","location","searchParams","URLSearchParams","sortByOrder","get","lowerTitle","toLocaleLowerCase","data-name","onClick","e","selector","currentTarget","attributes","getNamedItem","set","push","toString","icon","faSort","faSortUp","faSortDown","PeopleTable","query","filtredPeople","filter","includes","fatherName","motherName","sort","personA","personB","localeCompare","map","key","Filter","apliedQuery","setQuery","applyQuery","useCallback","debounce","newQuery","delete","type","placeholder","onChange","target","PeoplePage","useEffect","peopleWithParents","App","path","component","HomePage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b92aa3cc.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { IPerson } from '../Interfaces/Interfaces';\n\nexport const AppContext = React.createContext<{\n  people: IPerson[];\n  setPeople: React.Dispatch<React.SetStateAction<IPerson[]>>;\n}>({\n  people: [],\n  setPeople: () => {},\n});\n\nexport const AppProvider: React.FC = ({ children }) => {\n  const [people, setPeople] = useState<IPerson[]>([]);\n\n  const AppProps = {\n    people,\n    setPeople,\n  };\n\n  return <AppContext.Provider value={AppProps}>{children}</AppContext.Provider>;\n};\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <nav className=\"nav\">\n      <NavLink to=\"/\" exact className=\"nav-item\" activeClassName=\"active\">\n        Home\n      </NavLink>\n      <NavLink to=\"/people\" className=\"nav-item\" activeClassName=\"active\">\n        People\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Homepage = () => {\n  return <div className=\"homepage\">Homepage</div>;\n};\n\nexport default Homepage;\n","import React from 'react';\n\nconst NotFoundPage = () => <div className=\"notFoundPage\">Page not found</div>;\n\nexport default NotFoundPage;\n","import { request } from './api';\n\nexport const getPeople = () => {\n  return request('');\n};\n","export const BASE_URL =\n  'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const request = (url, options) => {\n  return fetch(`${BASE_URL}${url}`, options).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};\n","import React, { useContext } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport cn from 'classnames';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport { AppContext } from '../../Context/Context';\n\nconst PersonName: React.FC<{\n  person: IPerson;\n  name: string;\n  paramsName: string;\n}> = ({ person, name, paramsName }) => {\n  const { search } = useLocation();\n  const { people } = useContext(AppContext);\n  const createQueryStr = (personName: string) => {\n    if (personName) {\n      const queryStr =\n        personName.toLowerCase().split(' ').join('-') + `-${person.born}`;\n\n      return queryStr;\n    }\n\n    return '';\n  };\n\n  const lowerName = person.name.toLowerCase();\n  const isPersonInList = people.some((item) => name === item.name);\n\n  return (\n    <Link\n      to={`/people/${createQueryStr(name)}${search}`}\n      className={cn(\n        'name-link',\n        {\n          blue: paramsName === lowerName && person.sex === 'm',\n        },\n        {\n          red: paramsName === lowerName && person.sex === 'f',\n        },\n        {\n          bold: name && paramsName === name.toLowerCase() && !isPersonInList,\n        }\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import React from 'react';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport PersonName from './PersonName';\n\nconst PersonRow: React.FC<{ person: IPerson }> = ({ person }) => {\n  const params: { person: string } = useParams();\n\n  const parsParamsName = () => {\n    if (params.person) {\n      const arrFromName = params.person.split('-');\n      const paramsName = arrFromName.slice(0, arrFromName.length - 1).join(' ');\n\n      return paramsName;\n    }\n\n    return '';\n  };\n\n  const paramsName = parsParamsName();\n\n  return (\n    <tr className={cn({ row: paramsName === person.name.toLowerCase() })}>\n      <td className=\"person-name\">\n        <PersonName\n          person={person}\n          name={person.name}\n          paramsName={paramsName}\n        />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.mother}\n          paramsName={paramsName}\n        />\n      </td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.father}\n          paramsName={paramsName}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSort } from '@fortawesome/free-solid-svg-icons';\nimport { faSortUp } from '@fortawesome/free-solid-svg-icons';\nimport { faSortDown } from '@fortawesome/free-solid-svg-icons';\nimport { useLocation, useHistory } from 'react-router-dom';\n\nconst TableHeader: React.FC<{\n  sortBy: string | null;\n  title: string;\n}> = ({ sortBy, title }) => {\n  const [order, setOrder] = useState('asc');\n  const history = useHistory();\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const sortByOrder = searchParams.get('sortByOrder');\n\n  const onClick = (e: React.MouseEvent<HTMLTableDataCellElement>): void => {\n    const selector = e.currentTarget.attributes.getNamedItem('data-name')\n      ?.value;\n\n    if (selector) {\n      searchParams.set('sortBy', selector);\n      searchParams.set('sortByOrder', order);\n      setOrder(order === 'asc' ? 'desc' : 'asc');\n      history.push(`?${searchParams.toString()}`);\n    }\n  };\n\n  const lowerTitle = title.toLocaleLowerCase();\n\n  return (\n    <td data-name={title.toLowerCase()} onClick={onClick}>\n      <FontAwesomeIcon icon={faSort} />\n      <span className=\"title\">\n        {title} {sortBy === title.toLowerCase() && '*'}\n      </span>\n      {sortByOrder === 'asc' && sortBy === lowerTitle && (\n        <FontAwesomeIcon icon={faSortUp} />\n      )}\n      {sortByOrder === 'desc' && sortBy === lowerTitle && (\n        <FontAwesomeIcon icon={faSortDown} />\n      )}\n    </td>\n  );\n};\n\nexport default TableHeader;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PersonRow from './PersonRow';\nimport TableHeader from './TableHeader';\n\nconst PeopleTable: React.FC<{ people: IPerson[] }> = ({ people }) => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const query = searchParams.get('query');\n  const sortBy = searchParams.get('sortBy');\n  const sortByOrder = searchParams.get('sortByOrder');\n  const selectors = ['name', 'sex', 'born', 'died'];\n\n  let filtredPeople = query\n    ? people.filter(\n        (person) =>\n          person.name.toLowerCase().includes(query) ||\n          (person.fatherName &&\n            person.fatherName.toLowerCase().includes(query)) ||\n          (person.motherName && person.motherName.toLowerCase().includes(query))\n      )\n    : people;\n\n  if (sortBy && selectors.some((item) => item === sortBy)) {\n    filtredPeople = filtredPeople.sort((personA, personB): number => {\n      if (sortBy === 'name' || sortBy === 'sex') {\n        return sortByOrder === 'asc' || !sortByOrder\n          ? personA[sortBy].localeCompare(personB[sortBy])\n          : personB[sortBy].localeCompare(personA[sortBy]);\n      }\n\n      if (sortBy === 'born' || sortBy === 'died') {\n        return sortByOrder === 'asc' || !sortByOrder\n          ? personA[sortBy] - personB[sortBy]\n          : personB[sortBy] - personA[sortBy];\n      }\n\n      return 0;\n    });\n  }\n\n  return (\n    <div>\n      <table className=\"peopleTable\">\n        <thead>\n          <tr>\n            <TableHeader sortBy={sortBy} title=\"Name\" />\n            <TableHeader sortBy={sortBy} title=\"Sex\" />\n            <TableHeader sortBy={sortBy} title=\"Born\" />\n            <TableHeader sortBy={sortBy} title=\"Died\" />\n            <td>Mother</td>\n            <td>Father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {filtredPeople.map((person) => (\n            <PersonRow person={person} key={person.name} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useCallback, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport debounce from 'lodash/debounce';\n\nconst Filter: React.FC = () => {\n  const location = useLocation();\n  const searchParams = new URLSearchParams(location.search);\n  const apliedQuery = searchParams.get('query');\n  const [query, setQuery] = useState(apliedQuery);\n  const history = useHistory();\n\n  const applyQuery = useCallback(\n    debounce((newQuery) => {\n      if (newQuery) {\n        searchParams.set('query', newQuery);\n      } else {\n        searchParams.delete('query');\n      }\n\n      history.push(`?${searchParams.toString()}`);\n    }, 500),\n    []\n  );\n\n  const onChange: (e: React.ChangeEvent<HTMLInputElement>) => void = (e) => {\n    setQuery(e.target.value);\n    applyQuery(e.target.value);\n  };\n\n  return (\n    <form className=\"form\">\n      <input\n        value={query ? query : ''}\n        type=\"text\"\n        placeholder=\"filter\"\n        onChange={onChange}\n      />\n    </form>\n  );\n};\n\nexport default Filter;\n","import React, { useEffect, useContext } from 'react';\nimport { getPeople } from '../../api';\nimport { AppContext } from '../../Context/Context';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PeopleTable from '../PeopleTable/PeopleTable';\nimport Filter from '../Filter/Filter';\n\nconst PeoplePage = () => {\n  const { people, setPeople } = useContext(AppContext);\n\n  useEffect(() => {\n    getPeople().then((people) => {\n      const peopleWithParents = people.map((person: IPerson) => {\n        person.mother = person.motherName;\n        person.father = person.fatherName;\n        return person;\n      });\n      setPeople(peopleWithParents);\n    });\n  }, [setPeople]);\n\n  return (\n    <div className=\"peoplePage\">\n      <Filter />\n      <PeopleTable people={people} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport HomePage from './components/HomePage/HomePage';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1>People table</h1>\n\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact component={HomePage} />\n        <Route path=\"/people/:person?\" component={PeoplePage} />\n        <Redirect path=\"/home\" to=\"/\" />\n        <Redirect path=\"/react_people-table-basics\" to=\"/\" />\n        <NotFoundPage />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport { AppProvider } from './Context/Context';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <AppProvider>\n      <App />\n    </AppProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}