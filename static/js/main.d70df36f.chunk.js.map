{"version":3,"sources":["components/Header/Header.tsx","components/HomePage/HomePage.tsx","components/NotFoundPage/NotFoundPage.tsx","api/index.js","api/api.js","components/PeopleTable/PersonName.tsx","components/PeopleTable/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Header","className","to","exact","activeClassName","Homepage","NotFoundPage","getPeople","url","fetch","options","then","res","ok","Error","status","json","PersonName","personName","person","name","paramsName","people","lowerName","toLowerCase","isPersonInList","some","item","split","join","born","cn","blue","sex","red","bold","PersonRow","params","useParams","arrFromName","slice","length","parsParamsName","row","died","mother","father","PeopleTable","map","key","PeoplePage","useState","setPeople","useEffect","peopleWithParents","motherName","fatherName","App","path","component","HomePage","ReactDOM","render","document","getElementById"],"mappings":"kPAgBeA,G,MAbA,kBACb,gCACE,yBAAKC,UAAU,OACb,kBAAC,IAAD,CAASC,GAAG,IAAIC,OAAK,EAACF,UAAU,WAAWG,gBAAgB,UAA3D,QAGA,kBAAC,IAAD,CAASF,GAAG,UAAUD,UAAU,WAAWG,gBAAgB,UAA3D,cCLSC,EAFE,kBAAM,yBAAKJ,UAAU,YAAf,aCERK,EAFM,kBAAM,yBAAKL,UAAU,gBAAf,mB,QCAdM,EAAY,WACvB,OCAsBC,EDAP,GCCRC,MAAM,GAAD,OAHZ,qEAGY,OAAeD,GAAOE,GAASC,MAAK,SAACC,GAC/C,IAAKA,EAAIC,GACP,MAAM,IAAIC,MAAJ,UAAaF,EAAIG,SAGzB,OAAOH,EAAII,UANQ,IAACR,EAAKE,G,gBC2CdO,EApCV,SAAC,GAA+C,IAC3BC,EADlBC,EAA4C,EAA5CA,OAAQC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,WAA8B,IAAlBC,cAAkB,MAAT,GAAS,EAY5CC,EAAYJ,EAAOC,KAAKI,cACxBC,EAAiBH,EAAOI,MAAK,SAACC,GAAD,OAAUP,IAASO,EAAKP,QAE3D,OACE,kBAAC,IAAD,CACElB,GAAE,mBAhBkBgB,EAgBUE,EAf5BF,EAEAA,EAAWM,cAAcI,MAAM,KAAKC,KAAK,KAAzC,WAAoDV,EAAOW,MAKxD,KASL7B,UAAW8B,IACT,YACA,CACEC,KAAMX,IAAeE,GAA4B,MAAfJ,EAAOc,KAE3C,CACEC,IAAKb,IAAeE,GAA4B,MAAfJ,EAAOc,KAE1C,CACEE,KAAMf,GAAQC,IAAeD,EAAKI,gBAAkBC,KAIvDL,ICkBQgB,EArDqD,SAAC,GAG9D,IAFLjB,EAEI,EAFJA,OACAG,EACI,EADJA,OAGMe,EAA6BC,cAa7BjB,EAXiB,WACrB,GAAIgB,EAAOlB,OAAQ,CACjB,IAAMoB,EAAcF,EAAOlB,OAAOS,MAAM,KAGxC,OAFmBW,EAAYC,MAAM,EAAGD,EAAYE,OAAS,GAAGZ,KAAK,KAKvE,MAAO,GAGUa,GAEnB,OACE,wBAAIzC,UAAW8B,IAAG,CAAEY,IAAKtB,IAAeF,EAAOC,KAAKI,iBAClD,wBAAIvB,UAAU,eACZ,kBAAC,EAAD,CACEkB,OAAQA,EACRC,KAAMD,EAAOC,KACbC,WAAYA,EACZC,OAAQA,KAGZ,4BAAKH,EAAOc,KACZ,4BAAKd,EAAOW,MACZ,4BAAKX,EAAOyB,MACZ,4BACE,kBAAC,EAAD,CACEzB,OAAQA,EACRC,KAAMD,EAAO0B,OACbxB,WAAYA,EACZC,OAAQA,KAGZ,4BACE,kBAAC,EAAD,CACEH,OAAQA,EACRC,KAAMD,EAAO2B,OACbzB,WAAYA,EACZC,OAAQA,OCvBHyB,EAxBsC,SAAC,GAAgB,IAAdzB,EAAa,EAAbA,OACtD,OACE,6BACE,2BAAOrB,UAAU,eACf,+BACE,4BACE,oCACA,mCACA,oCACA,oCACA,sCACA,wCAGJ,+BACGqB,EAAO0B,KAAI,SAAC7B,GAAD,OACV,kBAAC,EAAD,CAAWA,OAAQA,EAAQ8B,IAAK9B,EAAOC,KAAME,OAAQA,WCMlD4B,EArBI,WAAO,IAAD,EACKC,mBAAS,IADd,mBAChB7B,EADgB,KACR8B,EADQ,KAcvB,OAXAC,qBAAU,WACR9C,IAAYI,MAAK,SAACW,GAChB,IAAMgC,EAAoBhC,EAAO0B,KAAI,SAAC7B,GAGpC,OAFAA,EAAO0B,OAAS1B,EAAOoC,WACvBpC,EAAO2B,OAAS3B,EAAOqC,WAChBrC,KAETiC,EAAUE,QAEX,IAGD,yBAAKrD,UAAU,cACb,kBAAC,EAAD,CAAaqB,OAAQA,MCEZmC,EAfO,kBACpB,yBAAKxD,UAAU,OACb,4CAEA,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOyD,KAAK,IAAIvD,OAAK,EAACwD,UAAWC,IACjC,kBAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWT,IAC1C,kBAAC,IAAD,CAAUQ,KAAK,QAAQxD,GAAG,MAC1B,kBAAC,IAAD,CAAUwD,KAAK,6BAA6BxD,GAAG,MAC/C,kBAAC,EAAD,SCbN2D,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.d70df36f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Header = () => (\n  <header>\n    <nav className=\"nav\">\n      <NavLink to=\"/\" exact className=\"nav-item\" activeClassName=\"active\">\n        Home\n      </NavLink>\n      <NavLink to=\"/people\" className=\"nav-item\" activeClassName=\"active\">\n        People\n      </NavLink>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\n\nconst Homepage = () => <div className=\"homepage\">Homepage</div>;\n\nexport default Homepage;\n","import React from 'react';\n\nconst NotFoundPage = () => <div className=\"notFoundPage\">Page not found</div>;\n\nexport default NotFoundPage;\n","import { request } from './api';\n\nexport const getPeople = () => {\n  return request('');\n};\n","export const BASE_URL =\n  'https://mate-academy.github.io/react_people-table/api/people.json';\n\nexport const request = (url, options) => {\n  return fetch(`${BASE_URL}${url}`, options).then((res) => {\n    if (!res.ok) {\n      throw new Error(`${res.status}`);\n    }\n\n    return res.json();\n  });\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { IPerson } from '../../Interfaces/Interfaces';\n\nconst PersonName: React.FC<{\n  person: IPerson;\n  name: string;\n  paramsName: string;\n  people: IPerson[];\n}> = ({ person, name, paramsName, people = [] }) => {\n  const createQueryStr = (personName: string) => {\n    if (personName) {\n      const queryStr =\n        personName.toLowerCase().split(' ').join('-') + `-${person.born}`;\n\n      return queryStr;\n    }\n\n    return '';\n  };\n\n  const lowerName = person.name.toLowerCase();\n  const isPersonInList = people.some((item) => name === item.name);\n\n  return (\n    <Link\n      to={`/people/${createQueryStr(name)}`}\n      className={cn(\n        'name-link',\n        {\n          blue: paramsName === lowerName && person.sex === 'm',\n        },\n        {\n          red: paramsName === lowerName && person.sex === 'f',\n        },\n        {\n          bold: name && paramsName === name.toLowerCase() && !isPersonInList,\n        }\n      )}\n    >\n      {name}\n    </Link>\n  );\n};\n\nexport default PersonName;\n","import React from 'react';\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport { useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport PersonName from './PersonName';\n\nconst PersonRow: React.FC<{ person: IPerson; people: IPerson[] }> = ({\n  person,\n  people,\n}) => {\n  // skip\n  const params: { person: string } = useParams();\n\n  const parsParamsName = () => {\n    if (params.person) {\n      const arrFromName = params.person.split('-');\n      const paramsName = arrFromName.slice(0, arrFromName.length - 1).join(' ');\n\n      return paramsName;\n    }\n\n    return '';\n  };\n\n  const paramsName = parsParamsName();\n\n  return (\n    <tr className={cn({ row: paramsName === person.name.toLowerCase() })}>\n      <td className=\"person-name\">\n        <PersonName\n          person={person}\n          name={person.name}\n          paramsName={paramsName}\n          people={people}\n        />\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.mother}\n          paramsName={paramsName}\n          people={people}\n        />\n      </td>\n      <td>\n        <PersonName\n          person={person}\n          name={person.father}\n          paramsName={paramsName}\n          people={people}\n        />\n      </td>\n    </tr>\n  );\n};\n\nexport default PersonRow;\n","import React from 'react';\n\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PersonRow from './PersonRow';\n\nconst PeopleTable: React.FC<{ people: IPerson[] }> = ({ people }) => {\n  return (\n    <div>\n      <table className=\"peopleTable\">\n        <thead>\n          <tr>\n            <td>Name</td>\n            <td>Sex</td>\n            <td>Born</td>\n            <td>Died</td>\n            <td>Mother</td>\n            <td>Father</td>\n          </tr>\n        </thead>\n        <tbody>\n          {people.map((person) => (\n            <PersonRow person={person} key={person.name} people={people} />\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default PeopleTable;\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\n\nimport { IPerson } from '../../Interfaces/Interfaces';\nimport PeopleTable from '../PeopleTable/PeopleTable';\n\nconst PeoplePage = () => {\n  const [people, setPeople] = useState([]);\n\n  useEffect(() => {\n    getPeople().then((people) => {\n      const peopleWithParents = people.map((person: IPerson) => {\n        person.mother = person.motherName;\n        person.father = person.fatherName;\n        return person;\n      });\n      setPeople(peopleWithParents);\n    });\n  }, []);\n\n  return (\n    <div className=\"peoplePage\">\n      <PeopleTable people={people} />\n    </div>\n  );\n};\n\nexport default PeoplePage;\n","import React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\n\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport HomePage from './components/HomePage/HomePage';\nimport NotFoundPage from './components/NotFoundPage/NotFoundPage';\nimport PeoplePage from './components/PeoplePage/PeoplePage';\n\nconst App: React.FC = () => (\n  <div className=\"App\">\n    <h1>People table</h1>\n\n    <Header />\n    <Switch>\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/people/:person?\" component={PeoplePage} />\n      <Redirect path=\"/home\" to=\"/\" />\n      <Redirect path=\"/react_people-table-basics\" to=\"/\" />\n      <NotFoundPage />\n    </Switch>\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}